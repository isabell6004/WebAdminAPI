spring:
  application:
    name: FashionGo WebAdminAPI
  boot:
    admin:
      username: admin
      password: fg6301
  profiles:
    active: "local"
  # Primary DB
  datasource:
    username: sa
    password: msqLsa6301
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    # Connection pool for Primary DB
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximumPoolSize: 100
      connectionTestQuery: Select top 1 * from sys.all_objects
      connectionTimeout: 250
  # FG Pay DB
  datasource2:
    username: sa
    password: msqLsa6301
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    # Connection pool for FG Pay DB
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximumPoolSize: 100
      connectionTestQuery: Select top 1 * from Stripe_Charges
      connectionTimeout: 250
  # FG EM DB
  datasource3:
    username: sa
    password: msqLsa6301
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    # Connection pool for FG EM DB
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximumPoolSize: 100
      connectionTestQuery: Select top 1 * from Stripe_Charges
      connectionTimeout: 250
  jpa:
    show-sql: true
    properties.hibernate.format_sql: true
    properties.hibernate.generate_statistics: true
    properties.javax.persistence.query.timeout: 10000
    properties.hibernate.dialect: org.hibernate.dialect.SQLServer2008Dialect
    hibernate.naming.physical-strategy: net.fashiongo.common.dal.MSSQLServerNamingStrategy
    
    
security.ignored: /**
server:
  port: 29901 
  context-path: /api
  
webAdminapi:
  fgServiceAPI_EndPoint: http://10.10.0.145:19002
  fgWebAdminAPI_EndPoint: http://webadmin-api-staging.fashiongo.net/api/
#  fgWebAdminAPI_EndPoint: http://localhost:19396/api/
  jwt:
    develop:
      check-token : false

---
# Local
spring:
  profiles: local
  datasource:
    url: jdbc:sqlserver://45.58.6.226;databaseName=FG_V2_CC
  datasource2:
    url: jdbc:sqlserver://45.58.6.226;databaseName=FG_PAY
  datasource3:
    url: jdbc:sqlserver://45.58.6.226;databaseName=FG_EM
    
logging:
  config: classpath:log4j2-local.xml
  
---
# Migration
spring:
  profiles: migration
  datasource:
    url: jdbc:sqlserver://10.10.10.3;databaseName=FG_V2
  datasource2:
    url: jdbc:sqlserver://10.10.10.3;databaseName=FG_PAY
  datasource3:
    url: jdbc:sqlserver://10.10.10.3;databaseName=FG_EM
    
  jpa:
    show-sql: false
    properties.hibernate.format_sql: false
    properties.hibernate.generate_statistics: false
    
logging:
  config: classpath:log4j2-dev.xml
  
---
# Dev
spring:
  profiles: dev
  datasource:
    url: jdbc:sqlserver://10.10.10.3;databaseName=FG_V2_CC
  datasource2:
    url: jdbc:sqlserver://10.10.10.3;databaseName=FG_PAY
  datasource3:
    url: jdbc:sqlserver://10.10.10.3;databaseName=FG_EM
    
  jpa:
    show-sql: false
    properties.hibernate.format_sql: false
    properties.hibernate.generate_statistics: false
    
logging:
  config: classpath:log4j2-dev.xml
  
---
# Stage
spring:
  profiles: stage

---
# Prod
spring:
  profiles: prod
  datasource:
    url: jdbc:sqlserver://10.10.10.6;databaseName=FG_V2
  datasource2:
    url: jdbc:sqlserver://10.10.10.6;databaseName=FG_PAY
  datasource3:
    url: jdbc:sqlserver://10.10.10.6;databaseName=FG_EM
  
  jpa:
    show-sql: false
    properties.hibernate.format_sql: false
    properties.hibernate.generate_statistics: false
    
webAdminapi:
  fgServiceAPI_EndPoint: http://10.10.0.150:19002
  
server:
  port: 19901
logging:
  config: classpath:log4j2-prod.xml

