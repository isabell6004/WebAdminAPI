# ===================================================================
# COMMON SPRING BOOT PROPERTIES
# (http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html)
# ===================================================================

spring:
  application:
    name: FashionGo WebAdminAPI
  profiles:
    active: "local"
  # Primary DB
  datasource:
    username: FGWebAdminAPIUser
    password: APIUser6301
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    # Connection pool for Primary DB
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximumPoolSize: 100
      connectionTestQuery: Select top 1 * from sys.all_objects
      connectionTimeout: 250
  # FG Pay DB
  datasource2:
    username: FGWebAdminAPIUser
    password: APIUser6301
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    # Connection pool for FG Pay DB
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximumPoolSize: 100
      connectionTestQuery: Select top 1 * from Stripe_Charges
      connectionTimeout: 250
  # FG EM DB
  datasource3:
    username: FGWebAdminAPIUser
    password: APIUser6301
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    # Connection pool for FG EM DB
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximumPoolSize: 100
      connectionTestQuery: Select top 1 * from [EM.Billing]
      connectionTimeout: 250
  # FG PhtoStudio DB
  datasource4:
    username: FGWebAdminAPIUser
    password: APIUser6301
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    # Connection pool for FG PhtoStudio DB
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximumPoolSize: 100
      connectionTestQuery: Select top 1 * from Photo_Image
  jpa:
    show-sql: true
    properties.hibernate.format_sql: true
    properties.hibernate.generate_statistics: false
    properties.javax.persistence.query.timeout: 10000
    properties.hibernate.dialect: org.hibernate.dialect.SQLServer2008Dialect
    hibernate.naming.physical-strategy: net.fashiongo.common.dal.MSSQLServerNamingStrategy
  cache:
    type: redis
    redis:
      time-to-live: 18000000 # expries after 30 min
  redis:
    host: 10.10.0.145
    port: 6379
    database: 2
    
    
server:
  port: 29901
  servlet:
    context-path: /api
  
webAdminapi:
  fgServiceAPI_EndPoint: http://10.10.0.145:29001
  fgVendorAPI_EndPoint: http://10.10.0.145:28501
  fgWebAdminAPI_EndPoint: http://webadmin-api-staging.fashiongo.net/api/
#  fgWebAdminAPI_EndPoint: http://localhost:19396/api/
  statsAPI_EndPoint: http://10.10.0.145:19101
  jwt:
    develop:
      check-token: true

bid-redis:
  database: 3
  lock:
    timeout-seconds:
      acquire: 3
      expire: 10
---
# Local
spring:
  profiles: local
  redis:
    host: 10.10.0.145
  datasource:
    jdbc-url: jdbc:sqlserver://10.200.16.31;databaseName=FG_V2
  datasource2:
    jdbc-url: jdbc:sqlserver://10.200.16.31;databaseName=FG_PAY
  datasource3:
    jdbc-url: jdbc:sqlserver://10.200.16.31;databaseName=FG_EM
  datasource4:
    jdbc-url: jdbc:sqlserver://10.200.16.31;databaseName=FG_PhotoStudio

logging:
  config: classpath:log4j2-local.xml
  path: logs/
  level:
    sql: TRACE
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
#              BasicExtractor: TRACE

webAdminapi:
  fgServiceAPI_EndPoint: http://10.10.0.145:29001
  statsAPI_EndPoint: http://localhost:19101
  jwt:
    develop:
      check-token: true

photostudio:
  fullModelPackageIdMap:
    package1: 1, 7, 18
    package2: 2, 8, 19
    package3: 3, 9, 20
  reportTypeProperties:
    test: test
    categoryIdMap:
      FullModelShotWomen: 1, 5
      FullModelShotWomenPlusSize: 2, 6
      FlatProductShotMen: 3, 7
      FlatProductShotKids: 4, 7
      FlatProductShotShoes: 7
      FlatProductShotHandbags: 7
      FlatProductShotAccessories: 7
    packageIdMap:
      FullModelShotWomen: 1, 2, 3, 7, 8, 9, 18, 19, 20
      FullModelShotWomenPlusSize: 1, 2, 3, 7, 8, 9, 18, 19, 20
      FlatProductShotMen: 12
      FlatProductShotKids: 13
      FlatProductShotShoes: 14
      FlatProductShotHandbags: 15
      FlatProductShotAccessories: 16

---
# Prod
spring:
  profiles: prod
  redis:
    host: 10.10.0.168
  datasource:
    jdbc-url: jdbc:sqlserver://10.10.10.6;databaseName=FG_V2
  datasource2:
    jdbc-url: jdbc:sqlserver://10.10.10.6;databaseName=FG_PAY
  datasource3:
    jdbc-url: jdbc:sqlserver://10.10.10.6;databaseName=FG_EM
  datasource4:
    jdbc-url: jdbc:sqlserver://10.10.10.6;databaseName=FG_PhotoStudio
  
  jpa:
    show-sql: false
    properties.hibernate.format_sql: false
    properties.hibernate.generate_statistics: false
    
webAdminapi:
  fgServiceAPI_EndPoint: http://10.10.0.150:19002
  statsAPI_EndPoint: http://10.10.0.150:19101
  
server:
  port: 19901

logging:
  config: classpath:log4j2-prod.xml
  path: /var/www/logs/

photostudio:
  fullModelPackageIdMap:
    package1: 1, 7, 18
    package2: 2, 8, 19
    package3: 3, 9, 20
  reportTypeProperties:
    test: test
    categoryIdMap:
      FullModelShotWomen: 1, 5
      FullModelShotWomenPlusSize: 2, 6
      FlatProductShotMen: 3, 7
      FlatProductShotKids: 4, 7
      FlatProductShotShoes: 7
      FlatProductShotHandbags: 7
      FlatProductShotAccessories: 7
    packageIdMap:
      FullModelShotWomen: 1, 2, 3, 7, 8, 9, 18, 19, 20
      FullModelShotWomenPlusSize: 1, 2, 3, 7, 8, 9, 18, 19, 20
      FlatProductShotMen: 12
      FlatProductShotKids: 13
      FlatProductShotShoes: 14
      FlatProductShotHandbags: 15
      FlatProductShotAccessories: 16
