# ===================================================================
# COMMON SPRING BOOT PROPERTIES
# (http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html)
# ===================================================================

spring:
  application:
    name: FashionGo WebAdminAPI
  profiles:
    active: "local"
  # Primary DB
  datasource:
    username: FGWebAdminAPIUser
    password: APIUser6301
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    # Connection pool for Primary DB
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximumPoolSize: 100
      connectionTestQuery: select 1
      connectionTimeout: 250 # 1 second
      idleTimeout: 600000 # 10 minutes
      maxLifetime: 3600000 # 1 hour
  # FG Pay DB
  datasource2:
    username: FGWebAdminAPIUser
    password: APIUser6301
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    # Connection pool for FG Pay DB
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximumPoolSize: 100
      connectionTestQuery: select 1
      connectionTimeout: 250 # 1 second
      idleTimeout: 600000 # 10 minutes
      maxLifetime: 3600000 # 1 hour
  # FG EM DB
  datasource3:
    username: FGWebAdminAPIUser
    password: APIUser6301
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    # Connection pool for FG EM DB
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximumPoolSize: 100
      connectionTestQuery: select 1
      connectionTimeout: 250 # 1 second
      idleTimeout: 600000 # 10 minutes
      maxLifetime: 3600000 # 1 hour
  # FG PhtoStudio DB
  datasource4:
    username: FGWebAdminAPIUser
    password: APIUser6301
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    # Connection pool for FG PhtoStudio DB
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximumPoolSize: 100
      connectionTestQuery: select 1
      connectionTimeout: 250 # 1 second
      idleTimeout: 600000 # 10 minutes
      maxLifetime: 3600000 # 1 hour
  jpa:
    show-sql: true
    properties.hibernate.format_sql: true
    properties.hibernate.generate_statistics: false
    properties.javax.persistence.query.timeout: 10000
    properties.hibernate.dialect: org.hibernate.dialect.SQLServer2012Dialect
    hibernate.naming.physical-strategy: net.fashiongo.common.dal.MSSQLServerNamingStrategy
  cache:
    type: redis
    redis:
      time-to-live: 18000000 # expries after 30 min
  redis:
    host: 10.210.16.201
    port: 6379
    database: 2
    
    
server:
  port: 29901
  servlet:
    context-path: /api
  tomcat:
    basedir: .
    max-threads: 250
    min-spare-threads: 10
    accesslog:
      enabled: true
      suffix: .log
      prefix: access_log
      file-date-format: .yyyy-MM-dd
      directory: /home1/irteam/logs/webadmin_api/accesslog
      pattern: combined

webAdminapi:
  fgServiceAPI_EndPoint: http://10.210.16.205:29001
  fgVendorAPI_EndPoint: http://10.210.16.205:28501
  fgWebAdminAPI_EndPoint: http://webadmin-api-staging.fashiongo.net/api/
  statsAPI_EndPoint: http://10.210.16.205:27601
  jwt:
    develop:
      check-token: true

bid-redis:
  database: 3
  lock:
    timeout-seconds:
      acquire: 3
      expire: 10

management:
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /monitor
---
# Local
spring:
  profiles: local
  redis:
    host: 10.210.16.201
  datasource:
    url: jdbc:sqlserver://10.210.16.31;databaseName=FG_V2
    hikari:
      maximumPoolSize: 10
  datasource2:
    url: jdbc:sqlserver://10.210.16.31;databaseName=FG_PAY
    hikari:
      maximumPoolSize: 10
  datasource3:
    url: jdbc:sqlserver://10.210.16.31;databaseName=FG_EM
    hikari:
      maximumPoolSize: 10
  datasource4:
    url: jdbc:sqlserver://10.210.16.31;databaseName=FG_PhotoStudio
    hikari:
      maximumPoolSize: 10

logging:
  config: classpath:log4j2-local.xml
  path: logs/
  level:
    sql: TRACE
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
#              BasicExtractor: TRACE

webAdminapi:
  fgServiceAPI_EndPoint: http://localhost:29001
  jwt:
    develop:
      check-token: true

photostudio:
  fullModelPackageIdMap:
    package1: 1, 7, 18
    package2: 2, 8, 19
    package3: 3, 9, 20
  reportTypeProperties:
    test: test
    categoryIdMap:
      FullModelShotWomen: 1, 5
      FullModelShotWomenPlusSize: 2, 6
      FlatProductShotMen: 3, 7
      FlatProductShotKids: 4, 7
      FlatProductShotShoes: 7
      FlatProductShotHandbags: 7
      FlatProductShotAccessories: 7
    packageIdMap:
      FullModelShotWomen: 1, 2, 3, 7, 8, 9, 18, 19, 20
      FullModelShotWomenPlusSize: 1, 2, 3, 7, 8, 9, 18, 19, 20
      FlatProductShotMen: 12
      FlatProductShotKids: 13
      FlatProductShotShoes: 14
      FlatProductShotHandbags: 15
      FlatProductShotAccessories: 16

toast:
  cloud:
    storage:
      object-storage:
        account: AUTH_7e2eaaa493ce4625a815481da0ec2e1a
        tenant-id: 7e2eaaa493ce4625a815481da0ec2e1a
        username: dl_nhnglobal_tc_service@nhnglobal.com
        password: FG!@#123
        auth-api-url: https://api-compute.cloud.toast.com/identity/v2.0/tokens
        api-url: https://api-storage.cloud.toast.com/v1/

coupon:
  notification:
    storage:
      root-email-name: coupon-email-list
      root-image-name: coupon-banner-images
      root-name-prefix: dev-
    image-root: https://rlyfpniry.cdn.toastcloud.com/

gnb:
  banner:
    image:
      storage:
        object-storage:
          account: AUTH_d2a2372095f2462da8b883294f747273
          tenant-id: d2a2372095f2462da8b883294f747273
          username: dl_nhnglobal_tc_service@nhnglobal.com
          password: FG!@#123
          auth-api-url: https://api-compute.cloud.toast.com/identity/v2.0/tokens
          api-url: https://api-storage.cloud.toast.com/v1/
        root-container: 'production'
        directory: 'gnb-menu-banner-img'